{"version":3,"file":"angularfire2.js","sourceRoot":"","sources":["../../../src/core/angularfire2.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAU,MAAM,eAAe,CAAC;AACvD,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AACnD,OAAO,EAAE,UAAU,EAAgB,cAAc,IAAI,KAAK,EAAE,MAAM,MAAM,CAAC;AACzE,OAAO,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAC;AAGvC,MAAM,CAAC,MAAM,mBAAmB,GAAG,IAAI,cAAc,CAAS,kCAAkC,CAAC,CAAC;AAElG,MAAM;IACJ,YAAmB,IAAY,EAAU,UAAkB;QAAxC,SAAI,GAAJ,IAAI,CAAQ;QAAU,eAAU,GAAV,UAAU,CAAQ;IAAG,CAAC;IAC/D,QAAQ,CAAC,GAAG,IAAW;QACrB,MAAM,CAAe,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAa,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;IACpG,CAAC;IAED,sBAAsB,CAAI,IAAmB;QAC3C,EAAE,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,IAAI,UAAU,CAAI,UAAU,CAAC,EAAE;gBACpC,MAAM,IAAI,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;gBACtB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBACvF,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBACrF,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IACD,iBAAiB,CAAI,IAAmB;QACtC,MAAM,CAAC,IAAI,UAAU,CAAI,UAAU,CAAC,EAAE;YACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE;gBACtC,MAAM,CAAC,IAAI,CAAC,SAAS,CACnB,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EACpD,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EACrD,GAAM,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CACpD,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF","sourcesContent":["import { InjectionToken, NgZone } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { Observable, Subscription, queueScheduler as queue } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\n// Put in database.ts when we drop database-depreciated\nexport const RealtimeDatabaseURL = new InjectionToken<string>('angularfire2.realtimeDatabaseURL');\n\nexport class FirebaseZoneScheduler {\n  constructor(public zone: NgZone, private platformId: Object) {}\n  schedule(...args: any[]): Subscription {\n    return <Subscription>this.zone.runGuarded(function() { return queue.schedule.apply(queue, args)});\n  }\n  // TODO this is a hack, clean it up\n  keepUnstableUntilFirst<T>(obs$: Observable<T>) {\n    if (isPlatformServer(this.platformId)) {\n      return new Observable<T>(subscriber => {\n        const noop = () => {};\n        const task = Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop);\n        obs$.pipe(first()).subscribe(() => this.zone.runOutsideAngular(() => task.invoke()));\n        return obs$.subscribe(subscriber);\n      });\n    } else {\n      return obs$;\n    }\n  }\n  runOutsideAngular<T>(obs$: Observable<T>): Observable<T> {\n    return new Observable<T>(subscriber => {\n      return this.zone.runOutsideAngular(() => {\n        return obs$.subscribe(\n          value => this.zone.run(() => subscriber.next(value)),\n          error => this.zone.run(() => subscriber.error(error)),\n          ()    => this.zone.run(() => subscriber.complete()),\n        );\n      });\n    });\n  }\n}"]}