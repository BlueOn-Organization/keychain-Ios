{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../src/functions/functions.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAClF,OAAO,EAAc,IAAI,EAAE,MAAM,MAAM,CAAC;AACxC,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAIrC,OAAO,EAAqB,oBAAoB,EAAE,yBAAyB,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,MAAM,cAAc,CAAC;AAG9I,MAAM;IASJ,YACgC,OAAuB,EACN,YAA+C,EACzE,UAAkB,EACvC,IAAY;QAEZ,IAAI,CAAC,SAAS,GAAG,IAAI,qBAAqB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAE7D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE;YAC3C,MAAM,GAAG,GAAG,mBAAmB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;YACvD,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IAEL,CAAC;IAEM,aAAa,CAAe,IAAY;QAC7C,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACpD,MAAM,CAAC,CAAC,IAAO,EAAE,EAAE;YACjB,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,CACrC,SAAS,CAAC,IAAI,CACZ,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAS,CAAC,CACtB,CACF,CAAA;QACH,CAAC,CAAA;IACH,CAAC;;;YAnCF,UAAU;;;4CAWN,MAAM,SAAC,oBAAoB;4CAC3B,QAAQ,YAAI,MAAM,SAAC,yBAAyB;YACZ,MAAM,uBAAtC,MAAM,SAAC,WAAW;YArBgB,MAAM","sourcesContent":["import { Injectable, Inject, Optional, NgZone, PLATFORM_ID } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FirebaseOptions, FirebaseAppConfig } from 'angularfire2';\n\nimport { FirebaseFunctions, FirebaseOptionsToken, FirebaseNameOrConfigToken, _firebaseAppFactory, FirebaseZoneScheduler } from 'angularfire2';\n\n@Injectable()\nexport class AngularFireFunctions {\n\n  /**\n   * Firebase Functions instance\n   */\n  public readonly functions: FirebaseFunctions;\n\n  public readonly scheduler: FirebaseZoneScheduler;\n\n  constructor(\n    @Inject(FirebaseOptionsToken) options:FirebaseOptions,\n    @Optional() @Inject(FirebaseNameOrConfigToken) nameOrConfig:string|FirebaseAppConfig|undefined,\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n    this.scheduler = new FirebaseZoneScheduler(zone, platformId);\n    \n    this.functions = zone.runOutsideAngular(() => {\n      const app = _firebaseAppFactory(options, nameOrConfig);\n      return app.functions();\n    });\n\n  }\n\n  public httpsCallable<T=any, R=any>(name: string) {\n    const callable = this.functions.httpsCallable(name);\n    return (data: T) => {\n      const callable$ = from(callable(data));\n      return this.scheduler.runOutsideAngular(\n        callable$.pipe(\n          map(r => r.data as R)\n        )\n      )\n    }\n  }\n\n}\n"]}