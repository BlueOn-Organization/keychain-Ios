{"version":3,"file":"storage.js","sourceRoot":"","sources":["../../../src/storage/storage.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,cAAc,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAClG,OAAO,EAAE,gBAAgB,EAA+B,MAAM,OAAO,CAAC;AAGtE,OAAO,EAAuD,oBAAoB,EAAE,yBAAyB,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,MAAM,cAAc,CAAC;AAIhL,MAAM,CAAC,IAAM,aAAa,GAAG,IAAI,cAAc,CAAS,4BAA4B,CAAC,CAAC;AAStF;IAKE,4BACgC,OAAuB,EACN,YAA+C,EAC3D,aAAoB,EAClC,UAAkB,EACvC,IAAY;QAEZ,IAAI,CAAC,SAAS,GAAG,IAAI,qBAAqB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACpC,IAAM,GAAG,GAAG,mBAAmB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;YACvD,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,aAAa,IAAI,SAAS,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gCAAG,GAAH,UAAI,IAAY;QACd,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAClE,CAAC;IAED,mCAAM,GAAN,UAAO,IAAY,EAAE,IAAS,EAAE,QAAyB;QACvD,IAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAM,GAAG,GAAG,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACzD,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IACjC,CAAC;;gBA3BF,UAAU;;;gDAMN,MAAM,SAAC,oBAAoB;gDAC3B,QAAQ,YAAI,MAAM,SAAC,yBAAyB;6CAC5C,QAAQ,YAAI,MAAM,SAAC,aAAa;gBACA,MAAM,uBAAtC,MAAM,SAAC,WAAW;gBA1BgC,MAAM;;IA8C7D,yBAAC;CAAA,AA7BD,IA6BC;SA5BY,kBAAkB","sourcesContent":["import { Injectable, Inject, Optional, InjectionToken, NgZone, PLATFORM_ID } from '@angular/core';\nimport { createStorageRef, AngularFireStorageReference } from './ref';\nimport { createUploadTask, AngularFireUploadTask } from './task';\nimport { Observable } from 'rxjs';\nimport { FirebaseStorage, FirebaseOptions, FirebaseAppConfig, FirebaseOptionsToken, FirebaseNameOrConfigToken, FirebaseZoneScheduler, _firebaseAppFactory } from 'angularfire2';\n\nimport { UploadMetadata } from './interfaces';\n\nexport const StorageBucket = new InjectionToken<string>('angularfire2.storageBucket');\n\n/**\n * AngularFireStorage Service\n *\n * This service is the main entry point for this feature module. It provides\n * an API for uploading and downloading binary files from Cloud Storage for\n * Firebase.\n */\n@Injectable()\nexport class AngularFireStorage {\n  public readonly storage: FirebaseStorage;\n  public readonly scheduler: FirebaseZoneScheduler;\n\n  constructor(\n    @Inject(FirebaseOptionsToken) options:FirebaseOptions,\n    @Optional() @Inject(FirebaseNameOrConfigToken) nameOrConfig:string|FirebaseAppConfig|undefined,\n    @Optional() @Inject(StorageBucket) storageBucket:string,\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n    this.scheduler = new FirebaseZoneScheduler(zone, platformId);\n    this.storage = zone.runOutsideAngular(() => {\n      const app = _firebaseAppFactory(options, nameOrConfig);\n      return app.storage(storageBucket || undefined);\n    });\n  }\n\n  ref(path: string) {\n    return createStorageRef(this.storage.ref(path), this.scheduler);\n  }\n\n  upload(path: string, data: any, metadata?: UploadMetadata) {\n    const storageRef = this.storage.ref(path);\n    const ref = createStorageRef(storageRef, this.scheduler);\n    return ref.put(data, metadata);\n  }\n\n}\n"]}